import RPi.GPIO as GPIO
import time
import sys

 servo_pin = 18

def servo_angle(angle):
    duty = 2.5 + (12.0 - 2.5) * (angle + 90) / 180   
    servo.ChangeDutyCycle(duty)     
    time.sleep(0.3) 
    

GPIO.setmode(GPIO.BOARD) 
GPIO.setwarnings(False) 

while True:
  try :
        servo_angle(-90)               #サーボモータ -90°
        servo_angle(-60)               #サーボモータ -60°
        servo_angle(-30)               #サーボモータ -30°
        servo_angle(0)                 #サーボモータ  0°
        servo_angle(30)                #サーボモータ  30°
        servo_angle(60)                #サーボモータ  60°
        servo_angle(90)                #サーボモータ  90°
  except　KeyboardInterrupt:
    　servo.stop()
      GPIO.cleanup()
      sys. exit()


import RPi.GPIO as GPIO
import time


#Set function to calculate percent from angle
def angle_to_percent (angle) :
    if angle > 180 or angle < 0 :
        return False

    start = 4
    end = 12.5
    ratio = (end - start)/180 #Calcul ratio from angle to percent

    angle_as_percent = angle * ratio

    return start + angle_as_percent


GPIO.setmode(GPIO.BOARD) #Use Board numerotation mode
GPIO.setwarnings(False) #Disable warnings

#Use pin 12 for PWM signal
pwm_gpio = 12
frequence = 50
GPIO.setup(pwm_gpio, GPIO.OUT)
pwm = GPIO.PWM(pwm_gpio, frequence)

#Init at 0°
pwm.start(angle_to_percent(0))
time.sleep(1)

#Go at 90°
pwm.ChangeDutyCycle(angle_to_percent(90))
time.sleep(1)

#Finish at 180°
pwm.ChangeDutyCycle(angle_to_percent(180))
time.sleep(1)

#Close GPIO & cleanup
pwm.stop()
GPIO.cleanup()

import RPi.GPIO as GPIO
import time

GPIO.setmode(GPIO.BCM)


gp_out = 4
GPIO.setup(gp_out, GPIO.OUT)


servo = GPIO.PWM(gp_out, 50)


servo.start(0)

for i in range(3):
   
　　servo.ChangeDutyCycle(2.5)
    time.sleep(0.5)

    servo.ChangeDutyCycle(7.25)
    time.sleep(0.5)

    servo.ChangeDutyCycle(12)
    time.sleep(0.5)

    servo.ChangeDutyCycle(7.25)
    time.sleep(0.5)

servo.stop()
GPIO.cleanup()

import RPi.GPIO as GPIO
import time

def SERVO(a,b):
    pi.set_servo_pulsewidth(SERVO_L,1485+a)
    pi.set_servo_pulsewidth(SERVO_R,1480-b)

def motor(left,right,seconds):
	SERVO_PIN_R = 18
	SERVO_PIN_L = 17

  RPi.set_servo_pulsewidth( SERVO_PIN_R, 1480 - right )
	.set_servo_pulsewidth( SERVO_PIN_L, 1485 + left )
	time.sleep( seconds )
	RPi.set_servo_pulsewidth( SERVO_PIN_R, 1480 )
	RPi.set_servo_pulsewidth( SERVO_PIN_L, 1485 )

