# -*- coding: utf-8 -*-
from smbus import SMBus
import time

ACC_ADDRESS = 0x19
ACC_REGISTER_ADDRESS = 0x02
GYR_ADDRESS = 0x69
GYR_REGISTER_ADDRESS = 0x02
MAG_ADDRESS = 0x13
MAG_REGISTER_ADDRESS = 0x42

i2c = SMBus(1)

def bmx055_setup():
	# --- BMX055Ã£Setup --- #
	#Initialize ACC
	try:
		i2c.write_byte_data(ACC_ADDRESS, 0x0F, 0x03)	#Acc Scale  datasheet p57
		time.sleep(0.1)
		i2c.write_byte_data(ACC_ADDRESS, 0x10, 0x0F)	#Acc PMU  datasheet p57
		time.sleep(0.1)
		i2c.write_byte_data(ACC_ADDRESS, 0x11, 0x00)	#datasheet p58
		time.sleep(0.1)
	except:
		time.sleep(0.1)
		print("BMX055 Setup Error")
		i2c.write_byte_data(ACC_ADDRESS, 0x0F, 0x03)	#Acc Scale  datasheet p57
		time.sleep(0.1)
		i2c.write_byte_data(ACC_ADDRESS, 0x10, 0x0F)	#Acc PMU  datasheet p57
		time.sleep(0.1)
		i2c.write_byte_data(ACC_ADDRESS, 0x11, 0x00)	#datasheet p58
		time.sleep(0.1)

	#Initialize GYR
	try:
		i2c.write_byte_data(GYR_ADDRESS, 0x0F, 0x00)	#Gyro Scale  datasheet p99
		time.sleep(0.1)
		i2c.write_byte_data(GYR_ADDRESS, 0x10, 0x07)	#Acc PMU  datasheet p100
		time.sleep(0.1)
		i2c.write_byte_data(GYR_ADDRESS, 0x11, 0x00)	#datasheet p100
		time.sleep(0.1)
	except:
		time.sleep(0.1)
		print("BMX055 Setup Error")
		i2c.write_byte_data(GYR_ADDRESS, 0x0F, 0x00)	#Gyro Scale  datasheet p99
		time.sleep(0.1)
		i2c.write_byte_data(GYR_ADDRESS, 0x10, 0x07)	#Acc PMU  datasheet p100
		time.sleep(0.1)
		i2c.write_byte_data(GYR_ADDRESS, 0x11, 0x00)	#datasheet p100
		time.sleep(0.1)

	#Initialize MAG
	try:
		data = i2c.read_byte_data(MAG_ADDRESS, 0x4B)	#datasheet p134
		if(data == 0):
			i2c.write_byte_data(MAG_ADDRESS, 0x4B, 0x83)
			time.sleep(0.1)
		i2c.write_byte_data(MAG_ADDRESS, 0x4B, 0x01)	#datasheet p134
		time.sleep(0.1)
		i2c.write_byte_data(MAG_ADDRESS, 0x4C, 0x38)	#datasheet p135
		time.sleep(0.1)
		i2c.write_byte_data(MAG_ADDRESS, 0x4E, 0x84)	#datasheet p137
		time.sleep(0.1)
		i2c.write_byte_data(MAG_ADDRESS, 0x51, 0x04)	#datasheet p139
		time.sleep(0.1)
		i2c.write_byte_data(MAG_ADDRESS, 0x52, 0x0F)	#datasheet p139
		time.sleep(0.1)
	except:
		time.sleep(0.1)
		print("BMX055 Setup Error")
		data = i2c.read_byte_data(MAG_ADDRESS, 0x4B)	#datasheet p134
		if(data == 0):
			i2c.write_byte_data(MAG_ADDRESS, 0x4B, 0x83)
			time.sleep(0.1)
		i2c.write_byte_data(MAG_ADDRESS, 0x4B, 0x01)	#datasheet p134
		time.sleep(0.1)
		i2c.write_byte_data(MAG_ADDRESS, 0x4C, 0x38)	#datasheet p135
		time.sleep(0.1)
		i2c.write_byte_data(MAG_ADDRESS, 0x4E, 0x84)	#datasheet p137
		time.sleep(0.1)
		i2c.write_byte_data(MAG_ADDRESS, 0x51, 0x04)	#datasheet p139
		time.sleep(0.1)
		i2c.write_byte_data(MAG_ADDRESS, 0x52, 0x0F)	#datasheet p139
		time.sleep(0.1)

def acc_dataRead():
	# --- Read Acc Data --- #
	accData = [0, 0, 0, 0, 0, 0, 0]
	for i in range(7):
		try:
			accData[i] = i2c.read_byte_data(ACC_ADDRESS, ACC_REGISTER_ADDRESS+i)
		except:
			pass
			#print("error")

	return accData

def gyr_dataRead():
	# --- Read Gyro Data --- "
	gyrData = [0, 0, 0, 0, 0, 0]
	for i in range(6):
		try:
			gyrData[i] = i2c.read_byte_data(GYR_ADDRESS, GYR_REGISTER_ADDRESS+i)
		except:
			pass

	return gyrData

def mag_dataRead():
	# --- Read Mag Data --- #
	magData = [0, 0, 0, 0, 0, 0, 0, 0]
	for i in range(8):
		try:
			magData[i] = i2c.read_byte_data(MAG_ADDRESS, MAG_REGISTER_ADDRESS + i)
		except:
			pass
	return magData

def bmx055_read():
	# --- Read BMX055 Data --- #
	value = acc_dataRead()
	value += gyr_dataRead()
	value += mag_dataRead()

	return 	value
